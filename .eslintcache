[{"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\App.js":"1","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Products\\Product\\styles.js":"2","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Products\\Product\\Product.jsx":"3","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Navbar\\styles.js":"4","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Navbar\\Navbar.jsx":"5","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Products\\Products.jsx":"6","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\index.js":"7","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Products\\styles.js":"8","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\index.js":"9","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Cart\\styles.js":"10","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Cart\\CartItem\\styles.js":"12","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\CustomTextField.jsx":"13","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"14","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\Review.jsx":"16"},{"size":2831,"mtime":1608317387273,"results":"17","hashOfConfig":"18"},{"size":403,"mtime":1607841230666,"results":"19","hashOfConfig":"18"},{"size":1271,"mtime":1607884066845,"results":"20","hashOfConfig":"18"},{"size":1631,"mtime":1607853760940,"results":"21","hashOfConfig":"18"},{"size":1453,"mtime":1608051736133,"results":"22","hashOfConfig":"18"},{"size":725,"mtime":1607964811024,"results":"23","hashOfConfig":"18"},{"size":229,"mtime":1608129600381,"results":"24","hashOfConfig":"18"},{"size":298,"mtime":1607854645278,"results":"25","hashOfConfig":"18"},{"size":147,"mtime":1607839193871,"results":"26","hashOfConfig":"18"},{"size":597,"mtime":1608028391484,"results":"27","hashOfConfig":"18"},{"size":1971,"mtime":1608129480739,"results":"28","hashOfConfig":"18"},{"size":349,"mtime":1608354976287,"results":"29","hashOfConfig":"18"},{"size":476,"mtime":1608313771511,"results":"30","hashOfConfig":"18"},{"size":4693,"mtime":1608314597039,"results":"31","hashOfConfig":"18"},{"size":4001,"mtime":1608355804237,"results":"32","hashOfConfig":"18"},{"size":912,"mtime":1608229022282,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11cjvm3",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\App.js",[],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Products\\Product\\styles.js",[],["74","75"],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Navbar\\Navbar.jsx",["76","77"],"import React from 'react'\r\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from '@material-ui/core'\r\nimport { ShoppingCart } from '@material-ui/icons'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport logo from '../../assets/commerce.png'\r\nimport useStyles from './styles'\r\n\r\nconst Navbar = ({ totalItems }) => {\r\n    const classes = useStyles()\r\n    const location = useLocation()\r\n    return (\r\n        <>\r\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n                <Toolbar>\r\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\r\n                        <img src={logo} alt=\"Commerce.js\" height=\"25px\" className={classes.image} />\r\n                        Commerce.js\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    {location.pathname === '/' && (\r\n                    <div className={classes.button}>\r\n                        <IconButton component={Link} to=\"/cart\" aria-label=\"Show cart items\" color=\"inherit\">\r\n                            <Badge badgeContent={totalItems} color=\"secondary\">\r\n                                <ShoppingCart />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </div> )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n",["78","79"],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\index.js",[],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Products\\styles.js",[],["80","81"],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\index.js",[],["82","83"],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Cart\\styles.js",[],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Cart\\Cart.jsx",[],["84","85"],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["86","87"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, test }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState('');\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState('');\r\n  const methods = useForm();\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n      <FormProvider {...methods}>\r\n        <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n          <Grid container spacing={3}>\r\n            <FormInput required name=\"firstName\" label=\"First name\" />\r\n            <FormInput required name=\"lastName\" label=\"Last name\" />\r\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\r\n            <FormInput required name=\"email\" label=\"Email\" />\r\n            <FormInput required name=\"city\" label=\"City\" />\r\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\nexport default AddressForm;",["88","89"],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["90"],"C:\\Users\\Apisero\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":46,"nodeType":"97","messageId":"98","endLine":2,"endColumn":54},{"ruleId":"95","severity":1,"message":"99","line":2,"column":56,"nodeType":"97","messageId":"98","endLine":2,"endColumn":60},{"ruleId":"91","replacedBy":"100"},{"ruleId":"93","replacedBy":"101"},{"ruleId":"91","replacedBy":"102"},{"ruleId":"93","replacedBy":"103"},{"ruleId":"91","replacedBy":"104"},{"ruleId":"93","replacedBy":"105"},{"ruleId":"91","replacedBy":"106"},{"ruleId":"93","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":41,"column":6,"nodeType":"110","endLine":41,"endColumn":8,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":49,"column":6,"nodeType":"110","endLine":49,"endColumn":27,"suggestions":"113"},{"ruleId":"91","replacedBy":"114"},{"ruleId":"93","replacedBy":"115"},{"ruleId":"108","severity":1,"message":"116","line":38,"column":6,"nodeType":"110","endLine":38,"endColumn":12,"suggestions":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.",["118"],["119"],["118"],["119"],["118"],["119"],["118"],["119"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["120"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["121"],["118"],["119"],"React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"129","text":"130"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"131","text":"132"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"133","text":"134"},[1708,1710],"[checkoutToken.id]",[1961,1982],"[checkoutToken.id, shippingCountry, shippingSubdivision]",[1401,1407],"[activeStep, cart, history]"]